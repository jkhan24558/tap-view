#@ load("@ytt:data", "data")

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZ2RENDQktTZ0F3SUJBZ0lTQTYxQkNZYWRhSmU3Uk1KRCtYUE9ZaEYzTUEwR0NTcUdTSWIzRFFFQkN3VUEgTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRCBFd0pTTXpBZUZ3MHlNakEyTVRjeU1ERTRNemRhRncweU1qQTVNVFV5TURFNE16WmFNQ2t4SnpBbEJnTlZCQU1UIEhteGxZWEp1YVc1blkyVnVkR1Z5TG1wclkyeHZkV1J0WlhOb0xtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIgQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHkrSForeDhBVitxQXlLb29tU2NrR3ZCeWVtZk9pcW1zOEVDYWFZRkFpNiBJQWFhZzZiZmZ5emg4Qk91eDVEc3h4ckZtOXM1M1FoTm9rdzZYZ0hjT0FFM0tLcUsvVE55SGo0Y0ROQkVOY2tCIHEwZmpDSWtOWk5uRTZHcEJ5eW1tMWoxcGsvMU05cEVKeU9EbGU2d3FXWjdmLzhTTDVLSmVQMDZucHIvbHRSY28gakdVbDRBdit4QU95WjZLZ3loYkxoY1hRU1NKOEVVTktvbEpyNjBzcHlGNmEwZ05rVmkyU1ZzbHlndFlkK3RtMiAyemRDTGp5UTVLWHZua1IvT0ZSTzlWdWF4ZW1sL2xHamk0bHRySllOQVpQTWFXbHhMZjRoVlF6QjMzcnQwcG9FIEJmVC9MMko5aWt3ek9OVnpDSEV5bE9PUlcxOXJBMytNODloOG5XMWpxS2NDQXdFQUFhT0NBdE13Z2dMUE1BNEcgQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRCBWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbGkzNlJHQUNCbmRyOWM5V2FISnFsOTk0QmhVd0h3WURWUjBqIEJCZ3dGb0FVRkM2ekY3ZFlWc3V1VUFsQTVoK3ZuWXNVd3NZd1ZRWUlLd1lCQlFVSEFRRUVTVEJITUNFR0NDc0cgQVFVRkJ6QUJoaFZvZEhSd09pOHZjak11Ynk1c1pXNWpjaTV2Y21jd0lnWUlLd1lCQlFVSE1BS0dGbWgwZEhBNiBMeTl5TXk1cExteGxibU55TG05eVp5OHdnYUlHQTFVZEVRU0JtakNCbDRJV0tpNWhjSEJ6TG1wclkyeHZkV1J0IFpYTm9MbU52YllJUGFtdGpiRzkxWkcxbGMyZ3VZMjl0Z2g1c1pXRnlibWx1WjJObGJuUmxjaTVxYTJOc2IzVmsgYldWemFDNWpiMjJDSG0xbGRHRmtZWFJoTFhOMGIzSmxMbXByWTJ4dmRXUnRaWE5vTG1OdmJZSVRjbVZuTG1wciBZMnh2ZFdSdFpYTm9MbU52YllJWGRHRndMV2QxYVM1cWEyTnNiM1ZrYldWemFDNWpiMjB3VEFZRFZSMGdCRVV3IFF6QUlCZ1puZ1F3QkFnRXdOd1lMS3dZQkJBR0MzeE1CQVFFd0tEQW1CZ2dyQmdFRkJRY0NBUllhYUhSMGNEb3YgTDJOd2N5NXNaWFJ6Wlc1amNubHdkQzV2Y21jd2dnRUVCZ29yQmdFRUFkWjVBZ1FDQklIMUJJSHlBUEFBZGdCRyBwVlhyZGZxUklEQzFvb2xwOVBOOUVTeEJkTDc5U2JpRnEvTDhjUDV0UndBQUFZRnppRDNUQUFBRUF3QkhNRVVDIElFNGJrVnVFRjE5QXlQaUJ6UVVnbm0vZDh5a3VUbTg4dkR2Y1ZqMVFCRTN1QWlFQTVnbnFwUGhwcmx3Q040NnIgTnJsM0lwa25zb3JCUnNZUHhNdE4zR1M0RFZNQWRnQkJ5TXF4M3lKR1NoREdvVG9KUW9kZVRqR0xHd1ByNjB2SCBhUENRWXBZRzlnQUFBWUZ6aUQrakFBQUVBd0JITUVVQ0lFZ3JTVzRzcnVoWjFlVzBBdE8wUXVBUldZUWxtMUpuIDFudjZjL3I2K2VUckFpRUFpTTdZK3M3V3VEREMxejFQWDkwaHFVMi9LdmJzNmR6eUdzUWZaTzRjUlFNd0RRWUogS29aSWh2Y05BUUVMQlFBRGdnRUJBSWxPZk5hSTVIc2szbXNaeUUzR0tZWWJqUXZBQ0tISmlTSUQrbWZWcjFWRCBFbnZXeWlGMkYwTlpTVFVVZzdSN2ZTelpGeUhFZ1hsSDYyVHBuNHcwN2Vnb2NiWEJsRDFkbTBZMHhnUjBobVBHIGJjSWJOQ0Rud25JcUhJNzRTM2h0d3NRbFRCekxUOC84UjBtQ3Y5ODdocUtNczRwZUkyNkJYQWhrQXpmeDFqYXUgRXBXOXlvbzBUQmtRK2NGeFRlSXphWFBGbjdqbTdETkpHWFlWKzVxaXVoSFF4UnZ6SVRNWTNJd0ltTERyY1RZNyBSZm9tbG82dndIL25Sck8yTzVnbU44K1J4R3RLWVczckFMSWVxSXNwM0x4OTRPeFhzbXlWMVRja2UyanF0M2tUIEFaNzlwUUdFK05pc3VueHRQSGtVU0tVeTdUWDRNVDNxSU5ZRy93NDIwNEk9IC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0gLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZGakNDQXY2Z0F3SUJBZ0lSQUpFckNFclBEQmluVS9iV0xpV25YMW93RFFZSktvWklodmNOQVFFTEJRQXcgVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaCBjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NakF3T1RBME1EQXdNREF3IFdoY05NalV3T1RFMU1UWXdNREF3V2pBeU1Rc3dDUVlEVlFRR0V3SlZVekVXTUJRR0ExVUVDaE1OVEdWMEozTWcgUlc1amNubHdkREVMTUFrR0ExVUVBeE1DVWpNd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSyBBb0lCQVFDN0FoVW96UGFnbE5NUEV1eU5WWkxEK0lMeG1hWjZRb2luWFNhcXRTdTV4VXl4cjQ1citYWElvOWNQIFI1UVVWVFZYako2b29qa1o5WUk4UXFsT2J2VTd3eTdiamNDd1hQTlpPT2Z0ejJud1dnc2J2c0NVSkNXSCtqZHggc3hQbkhLemhtKy9iNUR0RlVrV1dxY0ZUempUSVV1NjFydTJQM21CdzRxVlVxN1p0RHBlbFFEUnJLOU84WnV0bSBOSHo2YTR1UFZ5bVorREFYWGJweWIvdUJ4YTNTaGxnOUY4Zm5DYnZ4Sy9lRzNNSGFjVjNVUnVQTXJTWEJpTHhnIFozVm1zL0VZOTZKYzVsUC9Pb2kyUjZYL0V4anFtQWwzUDUxVCtjOEI1ZldtY0JjVXIyT2svNW16azUzY1U2Y0cgL2tpRkhhRnByaVYxdXhQTVVnUDE3VkdoaTlzVkFnTUJBQUdqZ2dFSU1JSUJCREFPQmdOVkhROEJBZjhFQkFNQyBBWVl3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1CSUdBMVVkRXdFQi93UUlNQVlCIEFmOENBUUF3SFFZRFZSME9CQllFRkJRdXN4ZTNXRmJMcmxBSlFPWWZyNTJMRk1MR01COEdBMVVkSXdRWU1CYUEgRkhtMFdlWjd0dVhrQVhPQUNJaklHbGoyNlp0dU1ESUdDQ3NHQVFVRkJ3RUJCQ1l3SkRBaUJnZ3JCZ0VGQlFjdyBBb1lXYUhSMGNEb3ZMM2d4TG1rdWJHVnVZM0l1YjNKbkx6QW5CZ05WSFI4RUlEQWVNQnlnR3FBWWhoWm9kSFJ3IE9pOHZlREV1WXk1c1pXNWpjaTV2Y21jdk1DSUdBMVVkSUFRYk1Ca3dDQVlHWjRFTUFRSUJNQTBHQ3lzR0FRUUIgZ3Q4VEFRRUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNGeWs1SFBxUDNoVVNGdk5WbmVMS1lZNjExVFI2VyBQVE5sY2xRdGdhRHF3KzM0SUw5ZnpMZHdBTGR1Ty9aZWxON2tJSittNzR1eUErZWl0Ulk4a2M2MDdUa0M1M3dsIGlrZm1aVzQvUnZUWjhNNlVLKzVVemhLOGpDZEx1TUdZTDZLdnpYR1JTZ2kzeUxnamV3UXRDUGtJVno2RDJRUXogQ2tjaGVBbUNKOE1xeUp1NXpsenlaTWpBdm5uQVQ0NXRSQXhla3JzdTk0c1E0ZWdkUkNuYldTRHRZN2toK0JJbSBsSk5Yb0IxbEJNRUtJcTRRRFVPWG9SZ2ZmdURnaGplMVdyRzlNTCtIYmlzcS95Rk9Hd1hEOVJpWDhGNnN3Nlc0IGF2QXV2RHN6dWU1TDNzejg1SytFQzRZL3dGVkROdlpvNFRZWGFvNlowZitsUUtjMHQ4RFFZemsxT1hWdThycDIgeUpNQzZhbExiQmZPREFMWnZZSDduN2RvMUFabHM0STlkMVA0am5rRHJRb3hCM1VxUTloVmwzTEVLUTczeEYxTyB5SzVHaEREWDhvVmZHS0Y1dStkZWNJc0g0WWFUdzdtUDNHRnhKU3F2MyswbFVGSm9pNUxjNWRhMTQ5cDkwSWRzIGhDRXhyb0wxKzdtcnlJa1hQZUZNNVRnTzlyMHJ2WmFCRk92VjJ6MGdwMzVaMCtMNFdQbGJ1RWpOL2x4UEZpbisgSGxVanI4Z1JzSTNxZkpPUUZ5LzlyS0lKUjBZLzhPbXd0LzhvVFdneTFtZGVIbW1qazdqMW5Zc3ZDOUpTUTZadiBNbGRsVFRLQjN6aFRoVjErWFdZcDZyamQ1SlcxemJWV0VrTE54RTdHSlRoRVVHM3N6Z0JWR1A3cFNXVFVUc3FYIG5MUmJ3SE9vcTdoSHdnPT0gLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLSAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0gTUlJRllEQ0NCRWlnQXdJQkFnSVFRQUYzSVRmVTZVSzQ3bmFxUEdRS3R6QU5CZ2txaGtpRzl3MEJBUXNGQURBLyBNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UIERrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERUSXhNREV5TURFNU1UUXdNMW9YRFRJME1Ea3pNREU0TVRRd00xb3cgVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaCBjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCIEFRVUFBNElDRHdBd2dnSUtBb0lDQVFDdDZDUno5QlEzODV1ZUsxY29ISWUrM0xmZk9KQ01ianptVjZCNDkzWEMgb3Y3MWFtNzJBRThvMjk1b2hteEVrN2F4WS8wVUVtdS9IOUxxTVpzaGZ0RXpQTHBJOWQxNTM3TzQveEx4SVpwTCB3WXFHY1dsS1ptWnNqMzQ4Y0wrdEtTSUc4K1RBNW9DdTRrdVB0NWwrbEFPZjAwZVhmSmxJSTFQb09LNVBDbStEIEx0RkpWNHlBZExiYUw5QTRqWHNEY0NFYmRmSXdQUHFQcnQzYVk2dnJGay9DamhGTGZzOEw2UCsxZHk3MHNudEsgNEV3U0pReHdqUU1wb09GVEpPd1QyZTRadnhDelNvdy9pYU5oVWQ2c2h3ZVU5R054N0M3aWIxdVlnZUdKWERSNSBiSGJ2TzVCaWVlYmJwSm92SnNYUUVPRU8zdGtRamhiN3QvZW85OGZsQWdlWWp6WUlsZWZpTjVZTk5uV2UrdzV5IHNSMmJ2QVA1U1FYWWdkMEZ0Q3JXUWVtc0FYYVZDZy9ZMzlXOUVoODFMeWdYYk5LWXdhZ0paSGR1UnplNnpxeFogWG1pZGYzTFdpY1VHUVNrK1dUN2RKdlVreVJHbldxTk1RQjlHb1ptMXB6cFJib1k3bm4xeXB4SUZlRm50UGxGNCBGUXNEajQzUUx3V3lQbnRLSEV0ekJSTDh4dXJnVUJOOFE1TjBzOHAwNTQ0ZkFRalFNTlJiY1RhMEI3ckJNREJjIFNMZUNPNWltZldDS29xTXBnc3k2dllNRUc2S0RBMEdoMWdYeEc4SzI4S2g4aGp0R3FFZ3FpTngybW5hL0gycWwgUFJtUDZ6anpaTjdJS3cwS0tQLzMyK0lWUXRRaTBDZGQ0WG4rR09kd2lLMU81dG1MT3NiZEoxRnUvN3hrOVRORCBUd0lEQVFBQm80SUJSakNDQVVJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBUVl3IFN3WUlLd1lCQlFVSEFRRUVQekE5TURzR0NDc0dBUVVGQnpBQ2hpOW9kSFJ3T2k4dllYQndjeTVwWkdWdWRISjEgYzNRdVkyOXRMM0p2YjNSekwyUnpkSEp2YjNSallYZ3pMbkEzWXpBZkJnTlZIU01FR0RBV2dCVEVwN0drZXl4eCArdHZoUzVCMS84UVZZSVdKRURCVUJnTlZIU0FFVFRCTE1BZ0dCbWVCREFFQ0FUQS9CZ3NyQmdFRUFZTGZFd0VCIEFUQXdNQzRHQ0NzR0FRVUZCd0lCRmlKb2RIUndPaTh2WTNCekxuSnZiM1F0ZURFdWJHVjBjMlZ1WTNKNWNIUXUgYjNKbk1Ed0dBMVVkSHdRMU1ETXdNYUF2b0MyR0syaDBkSEE2THk5amNtd3VhV1JsYm5SeWRYTjBMbU52YlM5RSBVMVJTVDA5VVEwRllNME5TVEM1amNtd3dIUVlEVlIwT0JCWUVGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1IE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtjd0JzbG03L0RsTFFydDJNNTFvR3JTK280NCsveVFvREZWREMgNVd4Q3UyK2I5TFJQd2tTSUNIWE02d2ViRkdKdWVON3NKN281WFBXaW9XNVdsSEFRVTdHNzVLL1Fvc01yQWRTVyA5TVVnTlRQNTJHRTI0SEdOdExpMXFvSkZsY0R5cVNNbzU5YWh5MmNJMnFCRExLb2JreC9KM3ZXcmFWMFQ5VnVHIFdDTEtUVlhrY0dkdHdsZkZSamxCejRwWWcxaHRtZjVYNkRZTzhBNGpxdjJJbDlEalhBNlVTYlcxRnpYU0xyOU8gaGU4WTRJV1M2d1k3YkNrakNXRGNSUUpNRWhnNzZmc08zdHhFK0ZpWXJ1cTlSVVdoaUYxbXl2NFE2VytDeUJGQyBEZnZwN09PR0FONmRFT000K3FSOXNkam9TWUtFQnBzcjZHdFBBUXc0ZHk3NTNlYzUgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tIE1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQzh2aDJmc2ZBRmZxZ00gaXFLSmtuSkJyd2NucG56b3FwclBCQW1tbUJRSXVpQUdtb09tMzM4czRmQVRyc2VRN01jYXhadmJPZDBJVGFKTSBPbDRCM0RnQk55aXFpdjB6Y2g0K0hBelFSRFhKQWF0SDR3aUpEV1RaeE9ocVFjc3BwdFk5YVpQOVRQYVJDY2pnIDVYdXNLbG1lMy8vRWkrU2lYajlPcDZhLzViVVhLSXhsSmVBTC9zUURzbWVpb01vV3k0WEYwRWtpZkJGRFNxSlMgYSt0TEtjaGVtdElEWkZZdGtsYkpjb0xXSGZyWnR0czNRaTQ4a09TbDc1NUVmemhVVHZWYm1zWHBwZjVSbzR1SiBiYXlXRFFHVHpHbHBjUzMrSVZVTXdkOTY3ZEthQkFYMC95OWlmWXBNTXpqVmN3aHhNcFRqa1Z0ZmF3Ti9qUFBZIGZKMXRZNmluQWdNQkFBRUNnZ0VBRVV5L3ZGNTc2SlVHWkRmazFBVkhVYnZ3UlBNZXFkalJYYjQ2QURvYVEvNkQgWnZlTXI2UDJyUzk4YU9GeFMxaFltNXlYUDQzYk02S2lDS2lrNnppN0xXbFg0ZUhoZVhDeFV2SVJQcG14OEYybCB6RzREMzBRS0JXZm1BYTlNSnVJeTZ1Z2RkMjh4Zm5QT0pNY0VBZkRUekJzdC8xN3ZNdTYra01BUEtiR3RXcFRsIGVKUEN3VU1ZRXNuT1RsNVZkUEZsMWN3K0M4L0hmQ0pPUlZBVnZ4SmRHbkVpZ0xiNVV0Mml0YWRVOWt1MGxud0MgS1R3a1FuRllRYkxXUUM1VFVXd1RBcjhZTmRGNS9ta09yN3BrYjUvVzlScFFlZ0VXdEJ2NU1BcWdDS05makZ1RSBtT1lHeEsvcVE0bXBOdzFnVWQ3ZnhDaUtzOXpuK0gvVlR2a0xoSzVoTVFLQmdRREw2cFhYZW9UUXJFUmpxL0dTIFJHWTZhQ1hOdldtcERmOUx4MGIyazVGSXBOOHRyblpxMndlVVZJYUg2KzhXZ2J0Tld0dWpScUJ6Sm0rNmhKQTMgQkp5RGZGMkFCOHBZLzFGY1F2c0JtbkcvQXp1eGwvNnJmamk5b2l5THJaUXVKS0Z1VTd6UldvZVNrRTdXRmo2SSB0MWNudG5ZUnN3U3pBVUVZT2NzcjUrNHIyUUtCZ1FEczgxOHVKOHJ6ZVhGMm8yMGdhZEhrVDB6OHNUeGZReWRhIEk3MlFqNGYwd290bTRuQ2ZyeWFBQVN3aWtIMFpXZC8rLzZIQ1lXUzNGdlRLUTVodHlENWhZd3lRUzQrMTNKeGcgYS9LTjZ0aWxjRUFFKzk2a000S1lzYmdPbEx6TjJkK0JKeTEveThHdHhqVnBQS1RvRlpwb2tucXJvZTY5Qlh4UyBVUHpFN3pJb2Z3S0JnQVhvbnp6bUxQRUsvTlJTaUNadjJ2SjRVQmdkRS9HMUdSK3QvNDFuaXo4cW45am9CRUJtIFpsclM5QzcrRkNoM3krQ2E4R0JUekpScG1iVXk0Q2JuK0UwTERuNkdPMFBHNmltZE96NjVwZkFkL04zUmhLeWQgZExGeUFJNXZraXFnSHhsZVRjdFhMelI4Ly92T0d6UEU5RDZQVis1OVhIWi9ZODU2NWpzNGRqdEpBb0dBZXdTciBrTUgyRzB3Y3ZWU0Jyb2RpQWwrdGY2L2d3VENUT0xnL2pkTUc2ZXNyQnNKZmFIZzl5ODFRQmEzd1ZQNFZUa1dYIHpOeFZ0cnpEWUZPUnlzVmdwWjBRQThaSEdVc3RJTjVLY3FYUHpxeWxnRERuMldZbzBtL0tPRCsrZWowNFRjeHkgVWR3T2ROTG9IZmZ2UWRNZGRGZEFPdVY2bGtaSDBsRGJ1cjdZMHE4Q2dZQkNFUGd2QUtQOHdMajIwQXVieXRMOSBxZ3JmdUt3aGZTMnZ2MDZlKzI1ZndlZ3VNQ2hiekpOWGFOR3pTQVluYkJzQTZCNnAwbEVqd1hwR3dmak5TVUk0IFhuL1c2NW9VMTFCVGNpQlpERVBUdi9GNWhCU1NFMDlRQ3gvbFJCZks5clp2aDFZRDljUHgzRTV0NTdGQkE4emwgc0lmWWtqd200YTd0a1pCUDF0Z2t4Zz09IC0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: tls
  namespace: learningcenter
type: kubernetes.io/tls
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZ2RENDQktTZ0F3SUJBZ0lTQTYxQkNZYWRhSmU3Uk1KRCtYUE9ZaEYzTUEwR0NTcUdTSWIzRFFFQkN3VUEgTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRCBFd0pTTXpBZUZ3MHlNakEyTVRjeU1ERTRNemRhRncweU1qQTVNVFV5TURFNE16WmFNQ2t4SnpBbEJnTlZCQU1UIEhteGxZWEp1YVc1blkyVnVkR1Z5TG1wclkyeHZkV1J0WlhOb0xtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIgQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHkrSForeDhBVitxQXlLb29tU2NrR3ZCeWVtZk9pcW1zOEVDYWFZRkFpNiBJQWFhZzZiZmZ5emg4Qk91eDVEc3h4ckZtOXM1M1FoTm9rdzZYZ0hjT0FFM0tLcUsvVE55SGo0Y0ROQkVOY2tCIHEwZmpDSWtOWk5uRTZHcEJ5eW1tMWoxcGsvMU05cEVKeU9EbGU2d3FXWjdmLzhTTDVLSmVQMDZucHIvbHRSY28gakdVbDRBdit4QU95WjZLZ3loYkxoY1hRU1NKOEVVTktvbEpyNjBzcHlGNmEwZ05rVmkyU1ZzbHlndFlkK3RtMiAyemRDTGp5UTVLWHZua1IvT0ZSTzlWdWF4ZW1sL2xHamk0bHRySllOQVpQTWFXbHhMZjRoVlF6QjMzcnQwcG9FIEJmVC9MMko5aWt3ek9OVnpDSEV5bE9PUlcxOXJBMytNODloOG5XMWpxS2NDQXdFQUFhT0NBdE13Z2dMUE1BNEcgQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRCBWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbGkzNlJHQUNCbmRyOWM5V2FISnFsOTk0QmhVd0h3WURWUjBqIEJCZ3dGb0FVRkM2ekY3ZFlWc3V1VUFsQTVoK3ZuWXNVd3NZd1ZRWUlLd1lCQlFVSEFRRUVTVEJITUNFR0NDc0cgQVFVRkJ6QUJoaFZvZEhSd09pOHZjak11Ynk1c1pXNWpjaTV2Y21jd0lnWUlLd1lCQlFVSE1BS0dGbWgwZEhBNiBMeTl5TXk1cExteGxibU55TG05eVp5OHdnYUlHQTFVZEVRU0JtakNCbDRJV0tpNWhjSEJ6TG1wclkyeHZkV1J0IFpYTm9MbU52YllJUGFtdGpiRzkxWkcxbGMyZ3VZMjl0Z2g1c1pXRnlibWx1WjJObGJuUmxjaTVxYTJOc2IzVmsgYldWemFDNWpiMjJDSG0xbGRHRmtZWFJoTFhOMGIzSmxMbXByWTJ4dmRXUnRaWE5vTG1OdmJZSVRjbVZuTG1wciBZMnh2ZFdSdFpYTm9MbU52YllJWGRHRndMV2QxYVM1cWEyTnNiM1ZrYldWemFDNWpiMjB3VEFZRFZSMGdCRVV3IFF6QUlCZ1puZ1F3QkFnRXdOd1lMS3dZQkJBR0MzeE1CQVFFd0tEQW1CZ2dyQmdFRkJRY0NBUllhYUhSMGNEb3YgTDJOd2N5NXNaWFJ6Wlc1amNubHdkQzV2Y21jd2dnRUVCZ29yQmdFRUFkWjVBZ1FDQklIMUJJSHlBUEFBZGdCRyBwVlhyZGZxUklEQzFvb2xwOVBOOUVTeEJkTDc5U2JpRnEvTDhjUDV0UndBQUFZRnppRDNUQUFBRUF3QkhNRVVDIElFNGJrVnVFRjE5QXlQaUJ6UVVnbm0vZDh5a3VUbTg4dkR2Y1ZqMVFCRTN1QWlFQTVnbnFwUGhwcmx3Q040NnIgTnJsM0lwa25zb3JCUnNZUHhNdE4zR1M0RFZNQWRnQkJ5TXF4M3lKR1NoREdvVG9KUW9kZVRqR0xHd1ByNjB2SCBhUENRWXBZRzlnQUFBWUZ6aUQrakFBQUVBd0JITUVVQ0lFZ3JTVzRzcnVoWjFlVzBBdE8wUXVBUldZUWxtMUpuIDFudjZjL3I2K2VUckFpRUFpTTdZK3M3V3VEREMxejFQWDkwaHFVMi9LdmJzNmR6eUdzUWZaTzRjUlFNd0RRWUogS29aSWh2Y05BUUVMQlFBRGdnRUJBSWxPZk5hSTVIc2szbXNaeUUzR0tZWWJqUXZBQ0tISmlTSUQrbWZWcjFWRCBFbnZXeWlGMkYwTlpTVFVVZzdSN2ZTelpGeUhFZ1hsSDYyVHBuNHcwN2Vnb2NiWEJsRDFkbTBZMHhnUjBobVBHIGJjSWJOQ0Rud25JcUhJNzRTM2h0d3NRbFRCekxUOC84UjBtQ3Y5ODdocUtNczRwZUkyNkJYQWhrQXpmeDFqYXUgRXBXOXlvbzBUQmtRK2NGeFRlSXphWFBGbjdqbTdETkpHWFlWKzVxaXVoSFF4UnZ6SVRNWTNJd0ltTERyY1RZNyBSZm9tbG82dndIL25Sck8yTzVnbU44K1J4R3RLWVczckFMSWVxSXNwM0x4OTRPeFhzbXlWMVRja2UyanF0M2tUIEFaNzlwUUdFK05pc3VueHRQSGtVU0tVeTdUWDRNVDNxSU5ZRy93NDIwNEk9IC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0gLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZGakNDQXY2Z0F3SUJBZ0lSQUpFckNFclBEQmluVS9iV0xpV25YMW93RFFZSktvWklodmNOQVFFTEJRQXcgVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaCBjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NakF3T1RBME1EQXdNREF3IFdoY05NalV3T1RFMU1UWXdNREF3V2pBeU1Rc3dDUVlEVlFRR0V3SlZVekVXTUJRR0ExVUVDaE1OVEdWMEozTWcgUlc1amNubHdkREVMTUFrR0ExVUVBeE1DVWpNd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSyBBb0lCQVFDN0FoVW96UGFnbE5NUEV1eU5WWkxEK0lMeG1hWjZRb2luWFNhcXRTdTV4VXl4cjQ1citYWElvOWNQIFI1UVVWVFZYako2b29qa1o5WUk4UXFsT2J2VTd3eTdiamNDd1hQTlpPT2Z0ejJud1dnc2J2c0NVSkNXSCtqZHggc3hQbkhLemhtKy9iNUR0RlVrV1dxY0ZUempUSVV1NjFydTJQM21CdzRxVlVxN1p0RHBlbFFEUnJLOU84WnV0bSBOSHo2YTR1UFZ5bVorREFYWGJweWIvdUJ4YTNTaGxnOUY4Zm5DYnZ4Sy9lRzNNSGFjVjNVUnVQTXJTWEJpTHhnIFozVm1zL0VZOTZKYzVsUC9Pb2kyUjZYL0V4anFtQWwzUDUxVCtjOEI1ZldtY0JjVXIyT2svNW16azUzY1U2Y0cgL2tpRkhhRnByaVYxdXhQTVVnUDE3VkdoaTlzVkFnTUJBQUdqZ2dFSU1JSUJCREFPQmdOVkhROEJBZjhFQkFNQyBBWVl3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1CSUdBMVVkRXdFQi93UUlNQVlCIEFmOENBUUF3SFFZRFZSME9CQllFRkJRdXN4ZTNXRmJMcmxBSlFPWWZyNTJMRk1MR01COEdBMVVkSXdRWU1CYUEgRkhtMFdlWjd0dVhrQVhPQUNJaklHbGoyNlp0dU1ESUdDQ3NHQVFVRkJ3RUJCQ1l3SkRBaUJnZ3JCZ0VGQlFjdyBBb1lXYUhSMGNEb3ZMM2d4TG1rdWJHVnVZM0l1YjNKbkx6QW5CZ05WSFI4RUlEQWVNQnlnR3FBWWhoWm9kSFJ3IE9pOHZlREV1WXk1c1pXNWpjaTV2Y21jdk1DSUdBMVVkSUFRYk1Ca3dDQVlHWjRFTUFRSUJNQTBHQ3lzR0FRUUIgZ3Q4VEFRRUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNGeWs1SFBxUDNoVVNGdk5WbmVMS1lZNjExVFI2VyBQVE5sY2xRdGdhRHF3KzM0SUw5ZnpMZHdBTGR1Ty9aZWxON2tJSittNzR1eUErZWl0Ulk4a2M2MDdUa0M1M3dsIGlrZm1aVzQvUnZUWjhNNlVLKzVVemhLOGpDZEx1TUdZTDZLdnpYR1JTZ2kzeUxnamV3UXRDUGtJVno2RDJRUXogQ2tjaGVBbUNKOE1xeUp1NXpsenlaTWpBdm5uQVQ0NXRSQXhla3JzdTk0c1E0ZWdkUkNuYldTRHRZN2toK0JJbSBsSk5Yb0IxbEJNRUtJcTRRRFVPWG9SZ2ZmdURnaGplMVdyRzlNTCtIYmlzcS95Rk9Hd1hEOVJpWDhGNnN3Nlc0IGF2QXV2RHN6dWU1TDNzejg1SytFQzRZL3dGVkROdlpvNFRZWGFvNlowZitsUUtjMHQ4RFFZemsxT1hWdThycDIgeUpNQzZhbExiQmZPREFMWnZZSDduN2RvMUFabHM0STlkMVA0am5rRHJRb3hCM1VxUTloVmwzTEVLUTczeEYxTyB5SzVHaEREWDhvVmZHS0Y1dStkZWNJc0g0WWFUdzdtUDNHRnhKU3F2MyswbFVGSm9pNUxjNWRhMTQ5cDkwSWRzIGhDRXhyb0wxKzdtcnlJa1hQZUZNNVRnTzlyMHJ2WmFCRk92VjJ6MGdwMzVaMCtMNFdQbGJ1RWpOL2x4UEZpbisgSGxVanI4Z1JzSTNxZkpPUUZ5LzlyS0lKUjBZLzhPbXd0LzhvVFdneTFtZGVIbW1qazdqMW5Zc3ZDOUpTUTZadiBNbGRsVFRLQjN6aFRoVjErWFdZcDZyamQ1SlcxemJWV0VrTE54RTdHSlRoRVVHM3N6Z0JWR1A3cFNXVFVUc3FYIG5MUmJ3SE9vcTdoSHdnPT0gLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLSAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0gTUlJRllEQ0NCRWlnQXdJQkFnSVFRQUYzSVRmVTZVSzQ3bmFxUEdRS3R6QU5CZ2txaGtpRzl3MEJBUXNGQURBLyBNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UIERrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERUSXhNREV5TURFNU1UUXdNMW9YRFRJME1Ea3pNREU0TVRRd00xb3cgVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaCBjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCIEFRVUFBNElDRHdBd2dnSUtBb0lDQVFDdDZDUno5QlEzODV1ZUsxY29ISWUrM0xmZk9KQ01ianptVjZCNDkzWEMgb3Y3MWFtNzJBRThvMjk1b2hteEVrN2F4WS8wVUVtdS9IOUxxTVpzaGZ0RXpQTHBJOWQxNTM3TzQveEx4SVpwTCB3WXFHY1dsS1ptWnNqMzQ4Y0wrdEtTSUc4K1RBNW9DdTRrdVB0NWwrbEFPZjAwZVhmSmxJSTFQb09LNVBDbStEIEx0RkpWNHlBZExiYUw5QTRqWHNEY0NFYmRmSXdQUHFQcnQzYVk2dnJGay9DamhGTGZzOEw2UCsxZHk3MHNudEsgNEV3U0pReHdqUU1wb09GVEpPd1QyZTRadnhDelNvdy9pYU5oVWQ2c2h3ZVU5R054N0M3aWIxdVlnZUdKWERSNSBiSGJ2TzVCaWVlYmJwSm92SnNYUUVPRU8zdGtRamhiN3QvZW85OGZsQWdlWWp6WUlsZWZpTjVZTk5uV2UrdzV5IHNSMmJ2QVA1U1FYWWdkMEZ0Q3JXUWVtc0FYYVZDZy9ZMzlXOUVoODFMeWdYYk5LWXdhZ0paSGR1UnplNnpxeFogWG1pZGYzTFdpY1VHUVNrK1dUN2RKdlVreVJHbldxTk1RQjlHb1ptMXB6cFJib1k3bm4xeXB4SUZlRm50UGxGNCBGUXNEajQzUUx3V3lQbnRLSEV0ekJSTDh4dXJnVUJOOFE1TjBzOHAwNTQ0ZkFRalFNTlJiY1RhMEI3ckJNREJjIFNMZUNPNWltZldDS29xTXBnc3k2dllNRUc2S0RBMEdoMWdYeEc4SzI4S2g4aGp0R3FFZ3FpTngybW5hL0gycWwgUFJtUDZ6anpaTjdJS3cwS0tQLzMyK0lWUXRRaTBDZGQ0WG4rR09kd2lLMU81dG1MT3NiZEoxRnUvN3hrOVRORCBUd0lEQVFBQm80SUJSakNDQVVJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBUVl3IFN3WUlLd1lCQlFVSEFRRUVQekE5TURzR0NDc0dBUVVGQnpBQ2hpOW9kSFJ3T2k4dllYQndjeTVwWkdWdWRISjEgYzNRdVkyOXRMM0p2YjNSekwyUnpkSEp2YjNSallYZ3pMbkEzWXpBZkJnTlZIU01FR0RBV2dCVEVwN0drZXl4eCArdHZoUzVCMS84UVZZSVdKRURCVUJnTlZIU0FFVFRCTE1BZ0dCbWVCREFFQ0FUQS9CZ3NyQmdFRUFZTGZFd0VCIEFUQXdNQzRHQ0NzR0FRVUZCd0lCRmlKb2RIUndPaTh2WTNCekxuSnZiM1F0ZURFdWJHVjBjMlZ1WTNKNWNIUXUgYjNKbk1Ed0dBMVVkSHdRMU1ETXdNYUF2b0MyR0syaDBkSEE2THk5amNtd3VhV1JsYm5SeWRYTjBMbU52YlM5RSBVMVJTVDA5VVEwRllNME5TVEM1amNtd3dIUVlEVlIwT0JCWUVGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1IE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtjd0JzbG03L0RsTFFydDJNNTFvR3JTK280NCsveVFvREZWREMgNVd4Q3UyK2I5TFJQd2tTSUNIWE02d2ViRkdKdWVON3NKN281WFBXaW9XNVdsSEFRVTdHNzVLL1Fvc01yQWRTVyA5TVVnTlRQNTJHRTI0SEdOdExpMXFvSkZsY0R5cVNNbzU5YWh5MmNJMnFCRExLb2JreC9KM3ZXcmFWMFQ5VnVHIFdDTEtUVlhrY0dkdHdsZkZSamxCejRwWWcxaHRtZjVYNkRZTzhBNGpxdjJJbDlEalhBNlVTYlcxRnpYU0xyOU8gaGU4WTRJV1M2d1k3YkNrakNXRGNSUUpNRWhnNzZmc08zdHhFK0ZpWXJ1cTlSVVdoaUYxbXl2NFE2VytDeUJGQyBEZnZwN09PR0FONmRFT000K3FSOXNkam9TWUtFQnBzcjZHdFBBUXc0ZHk3NTNlYzUgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tIE1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQzh2aDJmc2ZBRmZxZ00gaXFLSmtuSkJyd2NucG56b3FwclBCQW1tbUJRSXVpQUdtb09tMzM4czRmQVRyc2VRN01jYXhadmJPZDBJVGFKTSBPbDRCM0RnQk55aXFpdjB6Y2g0K0hBelFSRFhKQWF0SDR3aUpEV1RaeE9ocVFjc3BwdFk5YVpQOVRQYVJDY2pnIDVYdXNLbG1lMy8vRWkrU2lYajlPcDZhLzViVVhLSXhsSmVBTC9zUURzbWVpb01vV3k0WEYwRWtpZkJGRFNxSlMgYSt0TEtjaGVtdElEWkZZdGtsYkpjb0xXSGZyWnR0czNRaTQ4a09TbDc1NUVmemhVVHZWYm1zWHBwZjVSbzR1SiBiYXlXRFFHVHpHbHBjUzMrSVZVTXdkOTY3ZEthQkFYMC95OWlmWXBNTXpqVmN3aHhNcFRqa1Z0ZmF3Ti9qUFBZIGZKMXRZNmluQWdNQkFBRUNnZ0VBRVV5L3ZGNTc2SlVHWkRmazFBVkhVYnZ3UlBNZXFkalJYYjQ2QURvYVEvNkQgWnZlTXI2UDJyUzk4YU9GeFMxaFltNXlYUDQzYk02S2lDS2lrNnppN0xXbFg0ZUhoZVhDeFV2SVJQcG14OEYybCB6RzREMzBRS0JXZm1BYTlNSnVJeTZ1Z2RkMjh4Zm5QT0pNY0VBZkRUekJzdC8xN3ZNdTYra01BUEtiR3RXcFRsIGVKUEN3VU1ZRXNuT1RsNVZkUEZsMWN3K0M4L0hmQ0pPUlZBVnZ4SmRHbkVpZ0xiNVV0Mml0YWRVOWt1MGxud0MgS1R3a1FuRllRYkxXUUM1VFVXd1RBcjhZTmRGNS9ta09yN3BrYjUvVzlScFFlZ0VXdEJ2NU1BcWdDS05makZ1RSBtT1lHeEsvcVE0bXBOdzFnVWQ3ZnhDaUtzOXpuK0gvVlR2a0xoSzVoTVFLQmdRREw2cFhYZW9UUXJFUmpxL0dTIFJHWTZhQ1hOdldtcERmOUx4MGIyazVGSXBOOHRyblpxMndlVVZJYUg2KzhXZ2J0Tld0dWpScUJ6Sm0rNmhKQTMgQkp5RGZGMkFCOHBZLzFGY1F2c0JtbkcvQXp1eGwvNnJmamk5b2l5THJaUXVKS0Z1VTd6UldvZVNrRTdXRmo2SSB0MWNudG5ZUnN3U3pBVUVZT2NzcjUrNHIyUUtCZ1FEczgxOHVKOHJ6ZVhGMm8yMGdhZEhrVDB6OHNUeGZReWRhIEk3MlFqNGYwd290bTRuQ2ZyeWFBQVN3aWtIMFpXZC8rLzZIQ1lXUzNGdlRLUTVodHlENWhZd3lRUzQrMTNKeGcgYS9LTjZ0aWxjRUFFKzk2a000S1lzYmdPbEx6TjJkK0JKeTEveThHdHhqVnBQS1RvRlpwb2tucXJvZTY5Qlh4UyBVUHpFN3pJb2Z3S0JnQVhvbnp6bUxQRUsvTlJTaUNadjJ2SjRVQmdkRS9HMUdSK3QvNDFuaXo4cW45am9CRUJtIFpsclM5QzcrRkNoM3krQ2E4R0JUekpScG1iVXk0Q2JuK0UwTERuNkdPMFBHNmltZE96NjVwZkFkL04zUmhLeWQgZExGeUFJNXZraXFnSHhsZVRjdFhMelI4Ly92T0d6UEU5RDZQVis1OVhIWi9ZODU2NWpzNGRqdEpBb0dBZXdTciBrTUgyRzB3Y3ZWU0Jyb2RpQWwrdGY2L2d3VENUT0xnL2pkTUc2ZXNyQnNKZmFIZzl5ODFRQmEzd1ZQNFZUa1dYIHpOeFZ0cnpEWUZPUnlzVmdwWjBRQThaSEdVc3RJTjVLY3FYUHpxeWxnRERuMldZbzBtL0tPRCsrZWowNFRjeHkgVWR3T2ROTG9IZmZ2UWRNZGRGZEFPdVY2bGtaSDBsRGJ1cjdZMHE4Q2dZQkNFUGd2QUtQOHdMajIwQXVieXRMOSBxZ3JmdUt3aGZTMnZ2MDZlKzI1ZndlZ3VNQ2hiekpOWGFOR3pTQVluYkJzQTZCNnAwbEVqd1hwR3dmak5TVUk0IFhuL1c2NW9VMTFCVGNpQlpERVBUdi9GNWhCU1NFMDlRQ3gvbFJCZks5clp2aDFZRDljUHgzRTV0NTdGQkE4emwgc0lmWWtqd200YTd0a1pCUDF0Z2t4Zz09IC0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: tls
  namespace: #@ data.values.tls.namespace
type: kubernetes.io/tls
---
apiVersion: projectcontour.io/v1
kind: TLSCertificateDelegation
metadata:
  name: contour-delegation
  namespace: #@ data.values.tls.namespace
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  delegations:
    - secretName: #@ data.values.tls.secretName
      targetNamespaces:
        - "*"
---
#!apiVersion: projectcontour.io/v1
#!kind: HTTPProxy
#!  metadata:
#!    name: tap-gui
#!    namespace: tap-gui
#!spec:
#!  virtualhost:
#!    fqdn: #@ "tap-gui.{}".format(data.values.domain)
#!    tls:
#!      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
#!  routes:
#!    - services:
#!       - name: server
#!          port: 7000
#!
#!---
#!apiVersion: projectcontour.io/v1
#!kind: HTTPProxy
#!metadata:
#!  name: app-live-view
#!  namespace: app-live-view
#!  annotations:
#!    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
#!spec:
#!  virtualhost:
#!    fqdn: #@ "app-live-view.{}".format(data.values.domain)
#!    tls:
#!      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
#!  routes:
#!    - services:
#!        - name: application-live-view-5112
#!          port: 80

#!---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: accelerator
  namespace: accelerator-system
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "accelerator.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: acc-server
          port: 80

---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    projectcontour.io/ingress.class: contour-external
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
  labels:
    projectcontour.io/ingress.class: contour-external
  name: api-portal-external
  namespace: api-portal
spec:
  routes:
    - conditions:
        - prefix: /
      services:
        - name: api-portal-server
          port: 8080
  virtualhost:
    fqdn: #@ "api-portal.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)

---
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: learningcenter
  namespace: learning-center-guided-ui
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "learningcenter.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: learningcenter-portal
          port: 8080

---