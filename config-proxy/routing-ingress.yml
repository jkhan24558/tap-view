#@ load("@ytt:data", "data")

---
apiVersion: v1
data:
  tls.crt: LU4gLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZ2VENDQktXZ0F3SUJBZ0lTQkl6UHl3bnB2WVlpUi9ZcGlrSXd0dGhvTUEwR0NTcUdTSWIzRFFFQkN3VUEgTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRCBFd0pTTXpBZUZ3MHlNakEyTVRjeE9UVXdOVGRhRncweU1qQTVNVFV4T1RVd05UWmFNQ2t4SnpBbEJnTlZCQU1UIEhteGxZWEp1YVc1blkyVnVkR1Z5TG1wclkyeHZkV1J0WlhOb0xtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIgQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWdNaEN2SnZQaWswSVN2NnRmcjUxWnE0OWF1YkU2bnZjQ0FGWldHcVJ4ZSA2cW9WaE9qOHpNdWtIY3VVLzhlYWc2aU1sU0xMWCtVYmNLMDJjOTBRQW5sT0l3UG0rRVV0NVltamZVT0hlVWM2IFFZSkkxck0wVGIwTVVHblNadnV1ajJjaWhMSTMxaUFIcDZEZzhKN2JqK1FKb0lFS3VSY2MzUldYQ3Rxekt0dmggSVpiRjJpKzVNcHVueE9Pejl6THVXMFlpRFJIcG4yUjY4TU9yK1dmNmVwSmsyZmJTTzFSc2RoQXcvd1dmcDEzNiArVER6cnI2OWR0eE9YaVl1ck9JbkRUeFdSK2pjZ0o2Tm93L1ZpMHpVdloySVYxVEdsMm5MTjgwdERNSWxCMVNWIGJGbFE0SEprSDFrMUVKMklSOWU1eWtzbFh5R1pSRVlIeDI4aHMrUTVJdzhDQXdFQUFhT0NBdFF3Z2dMUU1BNEcgQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRCBWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVamZJb0NZdDJQY1Q5RHNCNjFEQ0JZbXVmVFFVd0h3WURWUjBqIEJCZ3dGb0FVRkM2ekY3ZFlWc3V1VUFsQTVoK3ZuWXNVd3NZd1ZRWUlLd1lCQlFVSEFRRUVTVEJITUNFR0NDc0cgQVFVRkJ6QUJoaFZvZEhSd09pOHZjak11Ynk1c1pXNWpjaTV2Y21jd0lnWUlLd1lCQlFVSE1BS0dGbWgwZEhBNiBMeTl5TXk1cExteGxibU55TG05eVp5OHdnYUlHQTFVZEVRU0JtakNCbDRJV0tpNWhjSEJ6TG1wclkyeHZkV1J0IFpYTm9MbU52YllJUGFtdGpiRzkxWkcxbGMyZ3VZMjl0Z2g1c1pXRnlibWx1WjJObGJuUmxjaTVxYTJOc2IzVmsgYldWemFDNWpiMjJDSG0xbGRHRmtZWFJoTFhOMGIzSmxMbXByWTJ4dmRXUnRaWE5vTG1OdmJZSVRjbVZuTG1wciBZMnh2ZFdSdFpYTm9MbU52YllJWGRHRndMV2QxYVM1cWEyTnNiM1ZrYldWemFDNWpiMjB3VEFZRFZSMGdCRVV3IFF6QUlCZ1puZ1F3QkFnRXdOd1lMS3dZQkJBR0MzeE1CQVFFd0tEQW1CZ2dyQmdFRkJRY0NBUllhYUhSMGNEb3YgTDJOd2N5NXNaWFJ6Wlc1amNubHdkQzV2Y21jd2dnRUZCZ29yQmdFRUFkWjVBZ1FDQklIMkJJSHpBUEVBZGdCRyBwVlhyZGZxUklEQzFvb2xwOVBOOUVTeEJkTDc5U2JpRnEvTDhjUDV0UndBQUFZRnpidXR2QUFBRUF3QkhNRVVDIElRQ1V3MlhpMTFQbWNiM3RISjZZcjlmbmM4N1FFSEVPS2x4VTdWOU9nU0lFZGdJZ1RmcGxCelRaZmhQckRRWmEgbE9mWURzczlHL3FzU1RBdUluOGVRWkNEdlV3QWR3QnZVM2FzTWZBeEdkaVpBS1JSRmY5M0ZSd1IyUUxCQUNrRyBqYklJbWpmWkV3QUFBWUZ6YnV2SUFBQUVBd0JJTUVZQ0lRRE8xYUFDUzlGMUxlQTZ2dVVRaVNtL2NFeVEwZUVFIEJyWFRBKzhLWjlSbi9BSWhBSXg3SjdDSXNzM05nYlZFOGw0NUZnOGhhQXdKbm1nTzBFcGRZcnZRTGpmcE1BMEcgQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUE4dzFFQ21UODVlMnZWNXV0Sll1NXA0ZDkrb3czSlZuOTd0ZVRYN0ExSyBORnFLSThWNHpneEoxM1g4WDRBZHBFbTI1NlF1cGpsdVJMSDk1d2pZVndHTDBXZjRaRHY3TDBQM01qdi92N1BrIHEyVWVFMVJ6ODFLK2hsdEhxd2NQVHB2VmdBRmlKZjBxSlRHNStNL3FtUW5FWk90aHpNdkY3cnY3MnRnNXJrZUYgdU8vUXNxeVlkWE1NenhRUWxYMXc4QzRkaTJOZnpudDdRM0ZnRVNxU2w1VTBxU1o5R0ZqbVM4RS8wenJ4TTZkNiB4Q0dPQWdyd0NsM25TNGcxMUtsUnhmRUtFTFAwMTI3bzE0SjdXbGd0U3pwc3BuN0NkR1JrWjFMSTliSzYzY3ZkIHUvUWt2b21FSSsvT2RiSy9jQk1UVmJKVDY2ZFdNOGhhZ3lDYlloNEQrdGFxIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0gLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZGakNDQXY2Z0F3SUJBZ0lSQUpFckNFclBEQmluVS9iV0xpV25YMW93RFFZSktvWklodmNOQVFFTEJRQXcgVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaCBjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NakF3T1RBME1EQXdNREF3IFdoY05NalV3T1RFMU1UWXdNREF3V2pBeU1Rc3dDUVlEVlFRR0V3SlZVekVXTUJRR0ExVUVDaE1OVEdWMEozTWcgUlc1amNubHdkREVMTUFrR0ExVUVBeE1DVWpNd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSyBBb0lCQVFDN0FoVW96UGFnbE5NUEV1eU5WWkxEK0lMeG1hWjZRb2luWFNhcXRTdTV4VXl4cjQ1citYWElvOWNQIFI1UVVWVFZYako2b29qa1o5WUk4UXFsT2J2VTd3eTdiamNDd1hQTlpPT2Z0ejJud1dnc2J2c0NVSkNXSCtqZHggc3hQbkhLemhtKy9iNUR0RlVrV1dxY0ZUempUSVV1NjFydTJQM21CdzRxVlVxN1p0RHBlbFFEUnJLOU84WnV0bSBOSHo2YTR1UFZ5bVorREFYWGJweWIvdUJ4YTNTaGxnOUY4Zm5DYnZ4Sy9lRzNNSGFjVjNVUnVQTXJTWEJpTHhnIFozVm1zL0VZOTZKYzVsUC9Pb2kyUjZYL0V4anFtQWwzUDUxVCtjOEI1ZldtY0JjVXIyT2svNW16azUzY1U2Y0cgL2tpRkhhRnByaVYxdXhQTVVnUDE3VkdoaTlzVkFnTUJBQUdqZ2dFSU1JSUJCREFPQmdOVkhROEJBZjhFQkFNQyBBWVl3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1CSUdBMVVkRXdFQi93UUlNQVlCIEFmOENBUUF3SFFZRFZSME9CQllFRkJRdXN4ZTNXRmJMcmxBSlFPWWZyNTJMRk1MR01COEdBMVVkSXdRWU1CYUEgRkhtMFdlWjd0dVhrQVhPQUNJaklHbGoyNlp0dU1ESUdDQ3NHQVFVRkJ3RUJCQ1l3SkRBaUJnZ3JCZ0VGQlFjdyBBb1lXYUhSMGNEb3ZMM2d4TG1rdWJHVnVZM0l1YjNKbkx6QW5CZ05WSFI4RUlEQWVNQnlnR3FBWWhoWm9kSFJ3IE9pOHZlREV1WXk1c1pXNWpjaTV2Y21jdk1DSUdBMVVkSUFRYk1Ca3dDQVlHWjRFTUFRSUJNQTBHQ3lzR0FRUUIgZ3Q4VEFRRUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNGeWs1SFBxUDNoVVNGdk5WbmVMS1lZNjExVFI2VyBQVE5sY2xRdGdhRHF3KzM0SUw5ZnpMZHdBTGR1Ty9aZWxON2tJSittNzR1eUErZWl0Ulk4a2M2MDdUa0M1M3dsIGlrZm1aVzQvUnZUWjhNNlVLKzVVemhLOGpDZEx1TUdZTDZLdnpYR1JTZ2kzeUxnamV3UXRDUGtJVno2RDJRUXogQ2tjaGVBbUNKOE1xeUp1NXpsenlaTWpBdm5uQVQ0NXRSQXhla3JzdTk0c1E0ZWdkUkNuYldTRHRZN2toK0JJbSBsSk5Yb0IxbEJNRUtJcTRRRFVPWG9SZ2ZmdURnaGplMVdyRzlNTCtIYmlzcS95Rk9Hd1hEOVJpWDhGNnN3Nlc0IGF2QXV2RHN6dWU1TDNzejg1SytFQzRZL3dGVkROdlpvNFRZWGFvNlowZitsUUtjMHQ4RFFZemsxT1hWdThycDIgeUpNQzZhbExiQmZPREFMWnZZSDduN2RvMUFabHM0STlkMVA0am5rRHJRb3hCM1VxUTloVmwzTEVLUTczeEYxTyB5SzVHaEREWDhvVmZHS0Y1dStkZWNJc0g0WWFUdzdtUDNHRnhKU3F2MyswbFVGSm9pNUxjNWRhMTQ5cDkwSWRzIGhDRXhyb0wxKzdtcnlJa1hQZUZNNVRnTzlyMHJ2WmFCRk92VjJ6MGdwMzVaMCtMNFdQbGJ1RWpOL2x4UEZpbisgSGxVanI4Z1JzSTNxZkpPUUZ5LzlyS0lKUjBZLzhPbXd0LzhvVFdneTFtZGVIbW1qazdqMW5Zc3ZDOUpTUTZadiBNbGRsVFRLQjN6aFRoVjErWFdZcDZyamQ1SlcxemJWV0VrTE54RTdHSlRoRVVHM3N6Z0JWR1A3cFNXVFVUc3FYIG5MUmJ3SE9vcTdoSHdnPT0gLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLSAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0gTUlJRllEQ0NCRWlnQXdJQkFnSVFRQUYzSVRmVTZVSzQ3bmFxUEdRS3R6QU5CZ2txaGtpRzl3MEJBUXNGQURBLyBNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UIERrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERUSXhNREV5TURFNU1UUXdNMW9YRFRJME1Ea3pNREU0TVRRd00xb3cgVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaCBjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCIEFRVUFBNElDRHdBd2dnSUtBb0lDQVFDdDZDUno5QlEzODV1ZUsxY29ISWUrM0xmZk9KQ01ianptVjZCNDkzWEMgb3Y3MWFtNzJBRThvMjk1b2hteEVrN2F4WS8wVUVtdS9IOUxxTVpzaGZ0RXpQTHBJOWQxNTM3TzQveEx4SVpwTCB3WXFHY1dsS1ptWnNqMzQ4Y0wrdEtTSUc4K1RBNW9DdTRrdVB0NWwrbEFPZjAwZVhmSmxJSTFQb09LNVBDbStEIEx0RkpWNHlBZExiYUw5QTRqWHNEY0NFYmRmSXdQUHFQcnQzYVk2dnJGay9DamhGTGZzOEw2UCsxZHk3MHNudEsgNEV3U0pReHdqUU1wb09GVEpPd1QyZTRadnhDelNvdy9pYU5oVWQ2c2h3ZVU5R054N0M3aWIxdVlnZUdKWERSNSBiSGJ2TzVCaWVlYmJwSm92SnNYUUVPRU8zdGtRamhiN3QvZW85OGZsQWdlWWp6WUlsZWZpTjVZTk5uV2UrdzV5IHNSMmJ2QVA1U1FYWWdkMEZ0Q3JXUWVtc0FYYVZDZy9ZMzlXOUVoODFMeWdYYk5LWXdhZ0paSGR1UnplNnpxeFogWG1pZGYzTFdpY1VHUVNrK1dUN2RKdlVreVJHbldxTk1RQjlHb1ptMXB6cFJib1k3bm4xeXB4SUZlRm50UGxGNCBGUXNEajQzUUx3V3lQbnRLSEV0ekJSTDh4dXJnVUJOOFE1TjBzOHAwNTQ0ZkFRalFNTlJiY1RhMEI3ckJNREJjIFNMZUNPNWltZldDS29xTXBnc3k2dllNRUc2S0RBMEdoMWdYeEc4SzI4S2g4aGp0R3FFZ3FpTngybW5hL0gycWwgUFJtUDZ6anpaTjdJS3cwS0tQLzMyK0lWUXRRaTBDZGQ0WG4rR09kd2lLMU81dG1MT3NiZEoxRnUvN3hrOVRORCBUd0lEQVFBQm80SUJSakNDQVVJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBUVl3IFN3WUlLd1lCQlFVSEFRRUVQekE5TURzR0NDc0dBUVVGQnpBQ2hpOW9kSFJ3T2k4dllYQndjeTVwWkdWdWRISjEgYzNRdVkyOXRMM0p2YjNSekwyUnpkSEp2YjNSallYZ3pMbkEzWXpBZkJnTlZIU01FR0RBV2dCVEVwN0drZXl4eCArdHZoUzVCMS84UVZZSVdKRURCVUJnTlZIU0FFVFRCTE1BZ0dCbWVCREFFQ0FUQS9CZ3NyQmdFRUFZTGZFd0VCIEFUQXdNQzRHQ0NzR0FRVUZCd0lCRmlKb2RIUndPaTh2WTNCekxuSnZiM1F0ZURFdWJHVjBjMlZ1WTNKNWNIUXUgYjNKbk1Ed0dBMVVkSHdRMU1ETXdNYUF2b0MyR0syaDBkSEE2THk5amNtd3VhV1JsYm5SeWRYTjBMbU52YlM5RSBVMVJTVDA5VVEwRllNME5TVEM1amNtd3dIUVlEVlIwT0JCWUVGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1IE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtjd0JzbG03L0RsTFFydDJNNTFvR3JTK280NCsveVFvREZWREMgNVd4Q3UyK2I5TFJQd2tTSUNIWE02d2ViRkdKdWVON3NKN281WFBXaW9XNVdsSEFRVTdHNzVLL1Fvc01yQWRTVyA5TVVnTlRQNTJHRTI0SEdOdExpMXFvSkZsY0R5cVNNbzU5YWh5MmNJMnFCRExLb2JreC9KM3ZXcmFWMFQ5VnVHIFdDTEtUVlhrY0dkdHdsZkZSamxCejRwWWcxaHRtZjVYNkRZTzhBNGpxdjJJbDlEalhBNlVTYlcxRnpYU0xyOU8gaGU4WTRJV1M2d1k3YkNrakNXRGNSUUpNRWhnNzZmc08zdHhFK0ZpWXJ1cTlSVVdoaUYxbXl2NFE2VytDeUJGQyBEZnZwN09PR0FONmRFT000K3FSOXNkam9TWUtFQnBzcjZHdFBBUXc0ZHk3NTNlYzUgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LU4gLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tIE1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRElESVFyeWJ6NHBOQ0UgcityWDYrZFdhdVBXcm14T3A3M0FnQldWaHFrY1h1cXFGWVRvL016THBCM0xsUC9IbW9Pb2pKVWl5MS9sRzNDdCBOblBkRUFKNVRpTUQ1dmhGTGVXSm8zMURoM2xIT2tHQ1NOYXpORTI5REZCcDBtYjdybzluSW9TeU45WWdCNmVnIDRQQ2UyNC9rQ2FDQkNya1hITjBWbHdyYXN5cmI0U0dXeGRvdnVUS2JwOFRqcy9jeTdsdEdJZzBSNlo5a2V2REQgcS9sbitucVNaTm4yMGp0VWJIWVFNUDhGbjZkZCt2a3c4NjYrdlhiY1RsNG1McXppSncwOFZrZm8zSUNlamFNUCAxWXRNMUwyZGlGZFV4cGRweXpmTkxRekNKUWRVbFd4WlVPQnlaQjlaTlJDZGlFZlh1Y3BMSlY4aG1VUkdCOGR2IEliUGtPU01QQWdNQkFBRUNnZ0VBRWVscy9DNjRDTnRaQUVod0VwMUF2WEFjcm1BM3VtTXlqa1hwcU5YQjFwUjUgRm5tT3lQMjVxSkl0U01reWpjQzhBUjkxU3dSQ3RkVGJKZWMyUUpqcVg4b3JRSEl4MEovbmFZZUY4OEh4amZzZCBXbmtESUZDU2xWYkE3SGkyVjlxdFpHS20xdjVBNGVWTmtRNFMvV1pUWCt1c3YyRWlhWHRnSUVyQjRnc2d6MGNVIG5Pd2NxRzMxTlcvdHlkK3Q4L21GVzF6TXQvYXdibVpQeUEycHFXMXp2RDYvSGR6Y3pES0FpVWNVM2dwdExRQnQgdUpDemZDQlowamdGZThRSVNTUVN1cUZMQnlXNkZ4TWh3S3FVYWRsSzBjcHk2QXpnZ204eVNLYWxUTlBrL2MyTCBBaGJ5c1ZtU09veUJMNEI1aVg4WTBOaFZiNHJ4cUZYc2xZNnJNMXZLUVFLQmdRRGNsZy9DT1BPL1JXcHBoOUJ3IFF5Tyt1ZkdudlQyWjhFZklqUzZudzB3VDdqeHhWMVovbCtlSDhxWEZEbnBiN3JFUi83L1E3bTVBc211TGNsVHkgamVGQzRlc0dSYXNmYkRLS2tzV0dMZG0vS01mblM3QlZoVE1vcEpJeVNYN1hHTDZzQTZpSVlaZmR6eU4zMVdOQyAvOUFsTU9KMjlicFlMWU9ScG9hL0xybk9DUUtCZ1FEb0ttTDF2TGlqNERsZ2cvWUlRclJrSk1tYnZrWVh1c0ZJIHZnUjhiOWc3U2kzWW9RNEhFNkRScmpuUUtuc3ZpZXNIRlZtN1ptUTk1MzVTR2Q3SlNSYXQ5eC9NTFFVQVQ1NlggNHZXZlhZMjVaRXIyL25PWDlFLzAvVWx5MW5zdVBYa3VTZzRMOTlULzYzK01DdWhyaXBRMThlWitiUjZRZ3Z1MCAyTEZDY3pxdVZ3S0JnR2xVaG9YWnFCcUhUUDdEU1hheHVKblVORjVDY08zVzNKQVpTbFAxWDVpTXcvUGpIbnlpIHpuNE9FYlg4NmRTSUw2bEdsQk55SnRkaDJ4U2xMWWI4MUxtWkl4N0ZtYWJSaFhqQ0NPdS9iU0JvbXJ3SldsUWIgM0lmbHZhR2hrcDJuUlRUaU1sR2RPR1ZFQ2MybzZWTU8wQmRTTm5GVGVQMnVEZ3M0bDFNblByWHhBb0dCQUpVTCBTUmFMUGxudVE4ZURUL3FEb0QwK0pMTzRWbFU3am9ROWdMSEdONkh3Z0RnM1JNTWtSYlQyemFTbThRaFcyU3hsIDk0SklQSWhGU2lJNCszNXJUb1VHUmtLVWtFWmYxdWVaUzZnd3JpQmJrNGkzVjh3d2l2Z3pkdWlqYXRjSG5ma3EgajVQOVdaK21OdTdYdmRmMFVpdkRqUDZTM1BGWE5YSW5Qcnp6THJQbkFvR0FaZWo3WTBwSjZTbU94anNwcGxTdCBQOFdKWDhpUGtnZUJkbVdGRzU1ajhseTVKMys2eVdlOHZYTHozREZCWSsxRFNVSW5Ec1NQMDVleEFNbUJoelhuIEd0QTFaUzhMVmZVMUlqS2JkaFBUMlE2YXZVUFBydnkrVXM4WmVkUldJazBCOEg1WHlmYnlSOFFNYXR5M2tkVWggT3lJSTJ3VTBpZnM0Z3ZtS1hkOGpKc289IC0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: tls
  namespace: learningcenter
type: kubernetes.io/tls
---
apiVersion: v1
data:
  tls.crt: LU4gLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIE1JSUZLRENDQkJDZ0F3SUJBZ0lTQXoyMGJMNEp2RVRnQ01HR0Y5SXRSN0kzTUEwR0NTcUdTSWIzRFFFQkN3VUEgTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRCBFd0pTTXpBZUZ3MHlNakEyTVRjeE5USXhNVEJhRncweU1qQTVNVFV4TlRJeE1EbGFNQnd4R2pBWUJnTlZCQU1NIEVTb3VhbXRqYkc5MVpHMWxjMmd1WTI5dE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MgQVFFQXNySitmZ0p6M01Temt6Ykt5QTB0Z0ZrS0E0b0JVWTcveEFRUTlhS2sybW8raTQ5anNaV1hKR0NkT2N4MSA4Y3l4RW05clFPT21EM3EwZWl3V0x4cEptSzliYkZqRjhUS2NwV3hNQ05HWk1DWWZ0ZnVONFp2Q201N2RjdDFJIGpZUWtHb3JVdEU1cTNOYmhCK1ZvZ3l1RFFEc1B4NzRoMnZvOUJGV3hCM05CcHFXWU1yZ2tVSGkySjNwZUMyU2kgNjB0aDJYcXJQQXQxb0RwdGMyU2NUR2pYeU1YYUFUQ3c1akFmT1RwK2k1Q2xiSEdpZUNwZ3VReVdFNjdsTGxCZCBZNzBwS1BRSk5IVlNieDkvT0ZWbHEzZDdlY25keGNIeXBSSHJVNVVMZThmRm84S2I0K1hDYXRjeEdIMjR1dEhQIHVWZnFUQkRiTUpEUHVqSTIzWWg0NUZjV3R3SURBUUFCbzRJQ1REQ0NBa2d3RGdZRFZSMFBBUUgvQkFRREFnV2cgTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwRyBBMVVkRGdRV0JCU0VvWFZPNTNpeG9TM1REMExZenNqaTI3RE9uREFmQmdOVkhTTUVHREFXZ0JRVUxyTVh0MWhXIHk2NVFDVURtSDYrZGl4VEN4akJWQmdnckJnRUZCUWNCQVFSSk1FY3dJUVlJS3dZQkJRVUhNQUdHRldoMGRIQTYgTHk5eU15NXZMbXhsYm1OeUxtOXlaekFpQmdnckJnRUZCUWN3QW9ZV2FIUjBjRG92TDNJekxta3ViR1Z1WTNJdSBiM0puTHpBY0JnTlZIUkVFRlRBVGdoRXFMbXByWTJ4dmRXUnRaWE5vTG1OdmJUQk1CZ05WSFNBRVJUQkRNQWdHIEJtZUJEQUVDQVRBM0Jnc3JCZ0VFQVlMZkV3RUJBVEFvTUNZR0NDc0dBUVVGQndJQkZocG9kSFJ3T2k4dlkzQnogTG14bGRITmxibU55ZVhCMExtOXlaekNDQVFRR0Npc0dBUVFCMW5rQ0JBSUVnZlVFZ2ZJQThBQjJBRzlUZHF3eCA4REVaMkprQXBGRVYvM2NWSEJIWkFzRUFLUWFOc2dpYU45a1RBQUFCZ1hKMzZlY0FBQVFEQUVjd1JRSWdXMW1RIE9EcjdpR2tuYVN4ZHFNdkVSd1R5ZUlSbFd1S0NhdjZLYjJrdTNNd0NJUURobktPc3F5S2Y2OGY3S1lEN3VZT2ggVVVzdDI1U1JMMkFoTFhGQnYzNS9NQUIyQUVhbFZldDErcEVnTUxXaWlXbjA4MzBSTEVGMHZ2MUp1SVdyOHZ4dyAvbTFIQUFBQmdYSjM2ZVVBQUFRREFFY3dSUUloQU9qWm80NFZCRVAweGVKL2wrL0o3L2pMSXFPV1I2NEVYSWNBIDZEcXdaK3NqQWlCNW14cEtDQmE1UmJaTld6SzVuVXd1NGRpNE8rcDFZWmMrZjVMdVR6OHYzekFOQmdrcWhraUcgOXcwQkFRc0ZBQU9DQVFFQUtrRXdpYVZwMHFidUVQWkFJTWtPQWhpaWlQTzgyN211QktTYWwrMTVCUGdjYS80ciAyTkpmQ2JTdTBNTzRxYm9OL1ZGSkxhM01Qc2o4V2tTSWVpSE54TmxHZ3ZVRFU0dlVucDJyM1lSZFVrWnJoTUdhIGMwYTZ1cjRuMWVxSGpnT1FEWHF1NnNhRzB3TWRCSlpxaTVwZXBrOFVCbCtRdkZBZmxraHFhVXVDb2xjSGp1OVMgcEhFYi84VnJXNWlnZ3FveTZKWUQ2VCswUDNHRmN3ZDB3cVRQZVJPY3p1K3g4a1JvUXRsak5DMEp0M1MxWXluZiBCVnlPbHBqU3ZGY2pJbWY2WmR0ZDRWZzRhVGM2MGFycFdiVGR5QVphYXFSajRJY1MxWnNPUGFqSUFXVG9pL05FIExvcGxsSC80UDl4Q2R1ditTLzZlMkExeHBBVkxya3M5Q3cwZlV3PT0gLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLSAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0gTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdyBUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoIGNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcgV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZyBSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLIEFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AgUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeCBzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtIE5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcgWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRyAva2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DIEFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIgQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQSBGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3IEFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncgT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQiBndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXIFBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wgaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFReiBDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltIGxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQgYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMiB5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPIHlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMgaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKyBIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2IE1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVggbkxSYndIT29xN2hId2c9PSAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLSBNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvIE1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQgRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdyBUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoIGNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIgQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQyBvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMIHdZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QgTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250SyA0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1IGJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkgc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WiBYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0IEZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMgU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbCBQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EIFR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcgU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMSBjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4ICt0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIgQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdSBiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFIFUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUgTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQyA1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXIDlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcgV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TyBoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDIERmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNSAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LU4gLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tIE1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3lzbjUrQW5QY3hMT1QgTnNySURTMkFXUW9EaWdGUmp2L0VCQkQxb3FUYWFqNkxqMk94bFpja1lKMDV6SFh4ekxFU2IydEE0NllQZXJSNiBMQll2R2ttWXIxdHNXTVh4TXB5bGJFd0kwWmt3SmgrMSs0M2htOEtibnQxeTNVaU5oQ1FhaXRTMFRtcmMxdUVIIDVXaURLNE5BT3cvSHZpSGErajBFVmJFSGMwR21wWmd5dUNSUWVMWW5lbDRMWktMclMySFplcXM4QzNXZ09tMXogWkp4TWFOZkl4ZG9CTUxEbU1CODVPbjZMa0tWc2NhSjRLbUM1REpZVHJ1VXVVRjFqdlNrbzlBazBkVkp2SDM4NCBWV1dyZDN0NXlkM0Z3ZktsRWV0VGxRdDd4OFdqd3B2ajVjSnExekVZZmJpNjBjKzVWK3BNRU5zd2tNKzZNamJkIGlIamtWeGEzQWdNQkFBRUNnZ0VBUVlsa0NjdlZlVlNzdFdPRmVGd1k0WGNHVEtqNjlkSDNySWgvUGM4aUhiYVUgYkxPd2NPczNiTkNBS1RmNjA2enFEaVJOMWhVSGpLckljUHdsUUs0bjZyYjVWU0d6cXRPUWpyektuL3RhN3NVMCBvUlg2Z1pFU0RPZjFPSkMrY0tSVFoyYWVQdWg1bWJlMi9TSGVOQ2tyc0UxWTZyMHBCbm43RWRGcHBSMVlxUWg1IFcxdTZad1VzMS83eWt0cVM1TlUxTUlhVFZudE5CcVUwQ2srSDJ3V0VpaUNja21WamtZamI5dGxWbUhHcDRFankgeTJSR0J5VkIvRm9aazBnWnBBbHFmVEN6bVc1NURsSVBDUmMraEdwUTI1c3MvYmV6Z3NXaExrQThocnJtdmdKZSBqZUFTTkxUSnRMR2x4c0tZdmJXbzZtckFqeXZJcWRMdjR5MkNuRlp5bFFLQmdRRHh0VnJ5c2ZQNVB2UFZnd1grIEhDc0pQaXJYbFdmdmRTZGNQWWVLRjgxQlBvYks2b2MrNGovdFhNallZYklwNVBGaUNDUlhxVXZLOGdxT3lXWnYgYml2eThKZjdRMEtITFR2OXFkemRPOUNKZGlxM29RUHdGVCtQajdYeG9XdVRMOTRsRERzODhkYUd2Tm4vQ0Z4TyBjb2JNbFdCdG1JNkdhYjhJRSt1Zll0U01MUUtCZ1FDOVExMFVSMVJONmMrcGFLcHF4SmR0cS9UVkI1VDIxdW55IGlSNzR6QlRBam10OHNtMDBSZG9wMHFHYSs0SWFrRjZuRGpYUG1Hd3RDSTdoeWcyUUg0MXlTT3R6THRtM0Y1SkggUjBtdHJrRXdZRVlLM01MbGRydGo2TFZqbWFsMWh4eGV4TTZzenhFK21sWjBEVUVKNEd1SUd0SnFXSmhXbEMyUyBURHlQODhzbzh3S0JnSDA2N0NNZ0pmcTJMaGtxYUZsdStMRXlQM293MDRmU1dCRkhZOGtkYWQvcTZHV0x1NFRPIExqYnB3cm14YkdDZVdKM2xBQWRYRklqU2ZMdmNCekdta0NpdmxONit5MkpFQW5mN29RNFNwb29CNmtIM3I1V2QgUExCQjBnK2VCYUZkeEtmSFBZM204ckllZUlmVktoWU82bDVtNm0zK0E2SUtlY3BTbjlxVmx2QUZBb0dCQUxqNiBQdDNUL1VTTk1hWThvdHJwTzZzMzlubkRDRWZjc3hpV0JneGF3aW1VeU44K01GZDNzZ3RRVHh4L2xxQkozQWpnIGJaMXhOc0VvN1NVbTZ1eWl1Z2NwMTkxaXUrMGovNWJreU5FVVQ2aHRYK2U3N2t5QktCTTAzUnYwa2xoSTdtUjkgYkJZZjU1WE5HSlFpWkIrNEZNRVluZkRNbUU5K1VhLzhEUEVROE00YkFvR0JBSkExdGtOSTRZUlZQT3JEaStkSyBib2tnaTh0MktRd2ZGYVFaZW1VaVFxc282VHlFckx1SmM1TytBdnFpdEt1QVFjNW5HQkc1YmhMZFRjTUdNQWZaIHRKYkFETStpYTZDY3djdGs3elVhZTJzdUw1MGI3dEFzVXdqZE1UZXZXbTBPUVJDelVDb1RsWmEwcm9JV2xOZmggTTJjZTh6OFdaOEwycmprelFlMWxnNklRIC0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: tls
  namespace: #@ data.values.tls.namespace
type: kubernetes.io/tls
---
apiVersion: projectcontour.io/v1
kind: TLSCertificateDelegation
metadata:
  name: contour-delegation
  namespace: #@ data.values.tls.namespace
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  delegations:
    - secretName: #@ data.values.tls.secretName
      targetNamespaces:
        - "*"
---
#!apiVersion: projectcontour.io/v1
#!kind: HTTPProxy
#!  metadata:
#!    name: tap-gui
#!    namespace: tap-gui
#!spec:
#!  virtualhost:
#!    fqdn: #@ "tap-gui.{}".format(data.values.domain)
#!    tls:
#!      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
#!  routes:
#!    - services:
#!       - name: server
#!          port: 7000
#!
#!---
#!apiVersion: projectcontour.io/v1
#!kind: HTTPProxy
#!metadata:
#!  name: app-live-view
#!  namespace: app-live-view
#!  annotations:
#!    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
#!spec:
#!  virtualhost:
#!    fqdn: #@ "app-live-view.{}".format(data.values.domain)
#!    tls:
#!      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
#!  routes:
#!    - services:
#!        - name: application-live-view-5112
#!          port: 80

#!---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: accelerator
  namespace: accelerator-system
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "accelerator.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: acc-server
          port: 80

---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    projectcontour.io/ingress.class: contour-external
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
  labels:
    projectcontour.io/ingress.class: contour-external
  name: api-portal-external
  namespace: api-portal
spec:
  routes:
    - conditions:
        - prefix: /
      services:
        - name: api-portal-server
          port: 8080
  virtualhost:
    fqdn: #@ "api-portal.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)

---
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: learningcenter
  namespace: learning-center-guided-ui
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "learningcenter.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: learningcenter-portal
          port: 8080

---